-- please enter number of each Atlas and or Apollo Stake + number of Apollos, monthly VPS costs and Taxrate (example 0.25 for 25%) if useful, here:

set overallvpscosts to 0.0
set taxrate to 0.0
set ApolloStake to 1000000
set NumberApollo to 0
set NumberZeta to 0
set NumberSigma to 0
set NumberOmega to 1


-- show Block and Bundle rewards for Apollo
set DetailedApolloRewardView to 0

-- You can change to any other currency aside from EUR in the link below:

set mJson to do shell script "curl -s 'https://api.coingecko.com/api/v3/simple/price?ids=amber&vs_currencies=USD&include_24hr_vol=true&include_24hr_change=true'"
set AppleScript's text item delimiters to {","}
set keyValueList to (every text item in mJson) as list
set AppleScript's text item delimiters to ""

set theKeyValuePair to item 1 of keyValueList
set AppleScript's text item delimiters to {":"}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set usdPrice to item 3 of theKeyValueBufferList


-- get AMB-NET stats info
set mJson to do shell script "curl -s 'https://explorer-api.ambrosus.io/info'"
set AppleScript's text item delimiters to {","}
set keyValueList to (every text item in mJson) as list
set AppleScript's text item delimiters to ""

set theKeyValuePair to item 14 of keyValueList
set AppleScript's text item delimiters to {": "}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set apollos to item 2 of theKeyValueBufferList

-- get network bundles
set theKeyValuePair to item 33 of keyValueList
set AppleScript's text item delimiters to {": "}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set dailybundles to item 2 of theKeyValueBufferList

-- get bundlecost
set theKeyValuePair to item 23 of keyValueList
set AppleScript's text item delimiters to {": "}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set bundlecost to item 2 of theKeyValueBufferList

-- get AllApolloStake
set theKeyValuePair to item 10 of keyValueList
set AppleScript's text item delimiters to {": "}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set AllApolloStake to item 2 of theKeyValueBufferList

set mJson to do shell script "curl -s 'https://token.ambrosus.io/'"
set AppleScript's text item delimiters to {","}
set keyValueList to (every text item in mJson) as list
set AppleScript's text item delimiters to ""

-- get totalsupply
set theKeyValuePair to item 7 of keyValueList
set AppleScript's text item delimiters to {": "}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set AppleScript's text item delimiters to ""
set totalSupply to item 2 of theKeyValueBufferList

-- get Atlas node counts
set shortmonth to text 1 thru 3 of (month of (current date) as text)
set dd to text -2 thru -1 of ("00" & (day of (current date)))

set AppleScript's text item delimiters to {""}
set dayValueList to (every text item in dd) as list
if item 1 of dayValueList is "0" then set dd to item 2 of dayValueList
set searchstring to dd & " " & shortmonth


set mJson to do shell script "curl -s 'https://amb.money/data.php'"
set AppleScript's text item delimiters to {searchstring}
set keyValueList to (every text item in mJson) as list
set AppleScript's text item delimiters to ""

set theKeyValuePair to item 2 of keyValueList
set AppleScript's text item delimiters to {":"}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set omegas to item 13 of theKeyValueBufferList
set AppleScript's text item delimiters to {","}
set theKeyValueBufferList to (every text item in omegas) as list
set AppleScript's text item delimiters to ""
set omegas to item 1 of theKeyValueBufferList

set theKeyValuePair to item 2 of keyValueList
set AppleScript's text item delimiters to {":"}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set sigmas to item 14 of theKeyValueBufferList
set AppleScript's text item delimiters to {","}
set theKeyValueBufferList to (every text item in sigmas) as list
set AppleScript's text item delimiters to ""
set sigmas to item 1 of theKeyValueBufferList

set theKeyValuePair to item 2 of keyValueList
set AppleScript's text item delimiters to {":"}
set theKeyValueBufferList to (every text item in theKeyValuePair) as list
set zetas to item 15 of theKeyValueBufferList
set AppleScript's text item delimiters to {","}
set theKeyValueBufferList to (every text item in zetas) as list
set AppleScript's text item delimiters to ""
set zetas to item 1 of theKeyValueBufferList

set omegas to returnNumbersInString(omegas)
set sigmas to returnNumbersInString(sigmas)
set zetas to returnNumbersInString(zetas)

set dailybundles to RemoveFromString("\"", dailybundles)
set bundlecost to RemoveFromString("}", bundlecost)
--set bundlecost to returnNumbersInString(bundlecost)

-- REWARD FORMULAS ATLAS: -------------------

set ZetaWeight to 1
set SigmaWeight to 4
set OmegaWeight to 12
set AllAtlasBundleRewards to 0.7 * 0.7 * bundlecost * dailybundles
set AllAtlasWeight to omegas * OmegaWeight + sigmas * SigmaWeight + zetas * ZetaWeight

set AllOmegaRewards to AllAtlasBundleRewards * (omegas * OmegaWeight / AllAtlasWeight)
set OmegaReward to AllOmegaRewards / omegas

set AllSigmaRewards to AllAtlasBundleRewards * (sigmas * SigmaWeight / AllAtlasWeight)
set SigmaReward to AllSigmaRewards / sigmas

set AllZetaRewards to AllAtlasBundleRewards * (zetas * ZetaWeight / AllAtlasWeight)
set ZetaReward to AllZetaRewards / zetas

set OwnAtlasReward to NumberOmega * OmegaReward + NumberSigma * SigmaReward + NumberZeta * ZetaReward as text

---------------------------------------------

set OwnAtlasReward to RoundImperialNumberToTwoDecimals(OwnAtlasReward)

set usdPrice to changetocomma(usdPrice)
set usdPrice to RoundImperialNumberToThreeDecimals(usdPrice)

set AllApolloStake to RemoveFromString("}", AllApolloStake)
set AllApolloStake to changetocomma(AllApolloStake)

set apollos to RemoveFromString("\"", apollos)



-- REWARD FORMULAS APOLLO: -------------------

set ApolloDailyBundleReward to 0.7 * 0.3 * bundlecost * dailybundles / apollos * NumberApollo as text
set ApolloDailyBlockReward to 0.7 * 14 * 12 * 60 * 24 * (ApolloStake / AllApolloStake)

if NumberApollo is 0 then set ApolloDailyBlockReward to 0


---------------------------------------------

set DailyBundleReward to ApolloDailyBundleReward + OwnAtlasReward as text
set DailyBundleReward to RoundImperialNumberToTwoDecimals(DailyBundleReward)
set ApolloDailyBlockReward to number_to_string(ApolloDailyBlockReward)
set ApolloDailyBlockReward to RoundImperialNumberToTwoDecimals(ApolloDailyBlockReward)
set DailyReward to DailyBundleReward + ApolloDailyBlockReward



set daily to (DailyReward * usdPrice - overallvpscosts / 30) * (1 - taxrate) as text
set daily to RoundImperialNumberToTwoDecimals(daily)
set monthly to (DailyReward * usdPrice * 30 - overallvpscosts) * (1 - taxrate) as text
set monthly to RoundImperialNumberToTwoDecimals(monthly)
set yearly to (DailyReward * usdPrice * 365 - overallvpscosts * 12) * (1 - taxrate) as text
set yearly to number_to_string(yearly)
set yearly to RoundImperialNumberToTwoDecimals(yearly)

if DetailedApolloRewardView = 1 then
	set unformatedValue to "Rewards ~" & DailyReward & " AMB = Bu " & DailyBundleReward & " AMB + Bl " & ApolloDailyBlockReward & " AMB | " & daily & " $ perDay | " & monthly & " $ perMonth | " & yearly & " $ perYear |"
	return RemoveFromString("\"", unformatedValue)
end if

if DetailedApolloRewardView = 0 then
	set unformatedValue to "Rewards ~" & DailyReward & " AMB | " & daily & " $ perDay | " & monthly & " $ perMonth | " & yearly & " $ perYear |"
	return RemoveFromString("\"", unformatedValue)
end if




------- functions below -----------------------

-- remove character or string from given string
on RemoveFromString(CharOrString, txt)
	set AppleScript's text item delimiters to CharOrString
	set temp to txt's text items
	set AppleScript's text item delimiters to ""
	return temp as text
end RemoveFromString

-- convert string to numbers
on returnNumbersInString(inputString)
	set s to quoted form of inputString
	do shell script "sed s/[a-zA-Z\\']//g <<< " & s
	set dx to the result
	set numlist to {}
	repeat with i from 1 to count of words in dx
		set this_item to word i of dx
		try
			set this_item to this_item as number
			set the end of numlist to this_item
		end try
	end repeat
	return numlist
end returnNumbersInString

-- round balance to two decimals
on RoundImperialNumberToTwoDecimals(txt)
	set AppleScript's text item delimiters to ","
	if (count of text item of txt) is 2 then
		set decimals to text item 2 of txt
		if (count decimals) < 2 then
			set decimals to decimals & "0"
		end if
		set decimals to (text 1 thru 2 of decimals)
		set theNumber to text item 1 of txt & "," & decimals
		set AppleScript's text item delimiters to ""
		return theNumber
	end if
	if (count of text item of txt) is 1 then
		return txt
	end if
end RoundImperialNumberToTwoDecimals

on RoundImperialNumberToThreeDecimals(txt)
	set AppleScript's text item delimiters to ","
	set decimals to text item 2 of txt
	if (count decimals) < 3 then
		set decimals to decimals & "0"
	end if
	set decimals to (text 1 thru 3 of decimals)
	set theNumber to text item 1 of txt & "," & decimals
	set AppleScript's text item delimiters to ""
	return theNumber
end RoundImperialNumberToThreeDecimals

-- change to comma
on changetocomma(txt)
	set AppleScript's text item delimiters to "."
	set commaseperation to (every text item in txt) as list
	set AppleScript's text item delimiters to ""
	set theNumber to text item 1 of commaseperation & "," & text item 2 of commaseperation
	return theNumber
end changetocomma

-- convert long number
on number_to_string(this_number)
	set this_number to this_number as string
	if this_number contains "E+" then
		set x to the offset of "," in this_number
		set y to the offset of "+" in this_number
		set z to the offset of "E" in this_number
		set the decimal_adjust to characters (y - (length of this_number)) thru ¬
			-1 of this_number as string as number
		if x is not 0 then
			set the first_part to characters 1 thru (x - 1) of this_number as string
		else
			set the first_part to ""
		end if
		set the second_part to characters (x + 1) thru (z - 1) of this_number as string
		set the converted_number to the first_part
		repeat with i from 1 to the decimal_adjust
			try
				set the converted_number to ¬
					the converted_number & character i of the second_part
			on error
				set the converted_number to the converted_number & "0"
			end try
		end repeat
		return the converted_number
	else
		return this_number
	end if
end number_to_string
